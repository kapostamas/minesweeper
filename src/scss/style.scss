@import url('https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@600&display=swap');

*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.wrapper{
    margin-top: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

#controls {
    background-color: #dedede;
    padding: 10px;
    display: flex;
    width: 1200px;
    height: 60px;
    justify-content: space-between;

    font-family: "Quicksand";
    &>div {
        display: flex;
        gap: 10px;
    }
    #difficulty, #restart {
        background-color: whitesmoke;
        border: 1px solid gray;
        width: 120px;
        box-shadow: inset 5px 5px 10px white, inset -3px -3px 5px #777;
        border-radius: 3px;
        font-family: "Quicksand";
        text-align: center;
    }

    input {
        width: 120px;
        border: none;

        &::placeholder {
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
        }
    }

    .display {
        background-color: white;
        width: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    #timer::before {
        font-family: "Font Awesome 5 Free";
        content: "\f2f2";
        font-weight: 900;
        margin-right: 10px;
        opacity: 0.5;
    }
    #counter::before {
        font-family: "Font Awesome 5 Free";
        content: "\f024";
        font-weight: 900;
        margin-right: 10px;
        opacity: 0.5;
    }
}

#minefield{
    width: auto;
    display: grid;
    border: 1px solid #eee;
    font-family: "Quicksand";

    .cell{
        background-color: rgb(230, 230, 230);
        text-align: center;
        border: 1px solid #ccc;
        padding: 5px 5px 5px;
        text-align: center;
        font-size: 20px;
        font-weight: 600;
        transition-property: background-color, box-shadow;
        transition-duration: 0.5s;
        transition-timing-function: ease-out;
        cursor: pointer;

        &[mines='1']::after {
            color: #00a2ff;
            content: "1";
        }
        &[mines='2']::after {
            color: #0a8506;
            content: "2";
        }
        &[mines='3']::after {
            color: #df0000;
            content: "3";
        }
        &[mines='4']::after {
            color: #043a9e;
            content: "4";
        }
        &[mines='5']::after {
            color: #e64900;
            content: "5";
        }
        &[mines='6']::after {
            color: #0066a1;
            content: "6";
        }
        &[mines='7']::after {
            color: #747474;
            content: "7";
        }
        &[mines='8']::after {
            color: #000000;
            content: "8";
        }
    }
    .mine{
        background-color:#f84361;
        &::after {
            font-family: "Font Awesome 5 Free";
            color: #000;
            font-weight: 900;
            content: "\e074";
        }
    }
    .hidden{
        background-color: whitesmoke;
        box-shadow: inset 5px 5px 10px white, inset -3px -3px 5px #777;
        &:hover {
            transition-duration: .2s;
            box-shadow: inset 3px 3px 10px white, inset -1px -1px 5px #777;
        }
    }
    .flag{
        &::after {
            font-family: "Font Awesome 5 Free";
            color: rgb(0, 0, 0);
            opacity: 0.5;
            font-weight: 900;
            content: "\f024";
        }
    }
    &.game-over {
        --amplitude: 15px;
        animation-name: "shake1", "shake2";
        animation-duration: 0.052s, 0.143s;
        animation-iteration-count: 11, 6;

        .flag:not(.mine)::after {
            opacity: 1;
            color: red;
        }
    }
}

@keyframes shake1 {
    0% {transform: translateX(0);}
    25% {transform: translateX(var(--amplitude));}
    50% {transform: translateX(0);}
    75% {transform: translateX(calc(0 - var(--amplitude)));}
    100% {transform: translateX(0);}
}

@keyframes shake2 {
    0% {translate: 0 0;}
    25% {translate: 0 calc(var(--amplitude) / 2);}
    50% {translate: 0 0;}
    75% {translate: 0 calc(0 - var(--amplitude) / 2);}
    100% {translate: 0 0;}
}